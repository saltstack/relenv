name: Deploy Artifacts

on:
  workflow_call:
    inputs:
      version:
        required: false
        type: string
        description: Version to author


jobs:
  upload_artifacts:
    name: Deploy Artifacts ${{ matrix.python }}-${{ matrix.arch }}-${{ matrix.platform }}
    runs-on:
      - self-hosted
      - linux
      - repo-release
    environment: release
    strategy:
      matrix:
        include:
          - platform: linux-gnu
            arch: x86_64
            python: 3.10.13
          - platform: linux-gnu
            arch: x86_64
            python: 3.11.6
          - platform: linux-gnu
            arch: aarch64
            python: 3.10.13
          - platform: linux-gnu
            arch: aarch64
            python: 3.11.6

          - platform: win
            arch: x86
            python: 3.10.13
          - platform: win
            arch: x86
            python: 3.11.6
          - platform: win
            arch: amd64
            python: 3.10.13
          - platform: win
            arch: amd64
            python: 3.11.6

          - platform: macos
            arch: x86_64
            python: 3.10.13
          - platform: macos
            arch: x86_64
            python: 3.11.6
          - platform: macos
            arch: aarch64
            python: 3.10.13
          - platform: macos
            arch: aarch64
            python: 3.11.6

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: ${{ matrix.python }}-${{ matrix.arch }}-${{ matrix.platform }}.tar.xz
        path: release-artifacts/

    - name: Get Salt Project GitHub Actions Bot Environment
      id: spb-environment
      run: |
        TOKEN=$(curl -sS -f -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 30")
        SPB_ENVIRONMENT=$(curl -sS -f -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/tags/instance/spb:environment)
        echo "spb-environment=$SPB_ENVIRONMENT" >> "$GITHUB_OUTPUT"

    - name: Install `awscli`
      run: |
        pip3 install awscli

    - name: "Deploy Python Build: ${{ matrix.python }}-${{ matrix.arch }}-${{ matrix.platform }}.tar.xz"
      run: |
        aws s3 cp release-artifacts/* s3://salt-project-${{ steps.spb-environment.outputs.spb-environment }}-salt-artifacts-release/relenv/${{ inputs.version }}/build/
