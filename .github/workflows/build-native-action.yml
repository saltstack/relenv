name: Build

on:
  workflow_call:
    inputs:
      changed-files:
        required: true
        type: string
        description: Build relenv python builds

jobs:

  build_linux:

    strategy:
      fail-fast: false
      matrix:
        version:
          - 3.10.16
          - 3.11.11
          - 3.12.9
          - 3.13.2
        host:
          - x86_64
          - aarch64
        include:
          - host: x86_64
            target: x86_64
          - host: aarch64
            target: aarch64

    name: "Python ${{ matrix.version }}  Linux ${{ matrix.target }} on ${{ matrix.host }}"

    runs-on:
      - ${{ (contains(matrix.host, 'x86_64') && 'ubuntu-24.04') || 'ubuntu-24.04-arm' }}

    env:
      RELENV_DATA: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential bison python3-all patchelf swig cmake libldap2-dev libsasl2-dev ldap-utils libssl-dev pkg-config libvirt-dev default-libmysqlclient-dev python3-virtualenv
          virtualenv venv
          venv/bin/pip3 install nox

      - name: Python Version
        run: |
          venv/bin/python3 --version
          venv/bin/python3 -c 'import os; print(os.name)'

      - name: Download Toolchain Artifact
        uses: actions/download-artifact@v4
        with:
          name: toolchain-${{ matrix.host }}-${{ matrix.target }}-linux-gnu.tar.xz
          path: .

      - name: Extract Toolchain Artifact
        run: |
          mkdir -p toolchain
          tar -C toolchain -xvf toolchain-${{ matrix.host }}-${{ matrix.target }}-linux-gnu.tar.xz

      - name: Build
        run: |
          venv/bin/python3 -m relenv build --arch=${{ matrix.target }} --python=${{ matrix.version }}

      - name: Verify Build
        if: ${{ matrix.host == matrix.target }}
        run: |
          venv/bin/python3 -m nox -e tests -- -s tests/test_verify_build.py

      - name: Linux Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.version }}-${{ matrix.host }}-${{ matrix.target }}-linux-gnu-logs
          path: logs/*
          retention-days: 5

      - name: "Upload artifact: build/${{ matrix.version }}-${{ matrix.target }}-linux-gnu.tar.xz"
        uses: actions/upload-artifact@v4
        if: ${{ matrix.host == matrix.target  && always()}}
        with:
          name: ${{ matrix.version }}-${{ matrix.target }}-linux-gnu.tar.xz
          path: build/${{ matrix.version }}-${{ matrix.target }}-linux-gnu.tar.xz
          retention-days: 5

  build_macos_12_x86_64:
    name: "Python macOS"

    runs-on: macos-13

    strategy:
      fail-fast: false
      matrix:
        version:
          - 3.10.16
          - 3.11.11
          - 3.12.9
          - 3.13.2
        arch:
          - x86_64

    env:
      RELENV_DATA: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Show environment
        run: |
          env

      - name: Install nox
        run: |
          pip3 install nox

      - name: Build
        run: |
          python3 -m relenv build --python=${{ matrix.version }}

      - name: Verify Build
        run: |
          python3 -m nox -e tests -- tests/test_verify_build.py

      - name: MacOS Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.version }}-${{ matrix.arch }}-macos-logs
          path: logs/*
          retention-days: 5

      - name: Python build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.version }}-${{ matrix.arch }}-macos.tar.xz
          path: build/${{ matrix.version }}-${{ matrix.arch }}-macos.tar.xz
          retention-days: 5

  build_macos_13_arm64:
    name: "Python macOS"

    runs-on: macos-15

    strategy:
      fail-fast: false
      matrix:
        version:
          - 3.10.16
          - 3.11.11
          - 3.12.9
          - 3.13.2
        arch:
          - arm64

    env:
      RELENV_DATA: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Show environment
        run: |
          env

      - name: Install nox
        run: |
          brew install nox

      - name: Build
        run: |
          python3 -m relenv build --python=${{ matrix.version }}

      - name: Verify Build
        run: |
          nox -e tests -- tests/test_verify_build.py

      - name: MacOS Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.version }}-${{ matrix.arch }}-macos-logs
          path: logs/*
          retention-days: 5

      - name: Python build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.version }}-${{ matrix.arch }}-macos.tar.xz
          path: build/${{ matrix.version }}-${{ matrix.arch }}-macos.tar.xz
          retention-days: 5

  build_windows:
    name: "Python Windows"
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        version:
          - 3.10.16
          - 3.11.11
          - 3.12.9
          - 3.13.2
        arch:
          - amd64
          - x86

    env:
      RELENV_DATA: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install VS Build Tools
        run: |
          relenv/_scripts/install_vc_build.ps1

      - name: Install nox
        run: |
          pip3 install nox

      - name: Fetch Native Build
        if: ${{ matrix.arch != 'amd64' }}
        env:
          RELENV_FETCH_VERSION: 0.18.0
        run: |
          python3 -m relenv fetch --python=3.10.15

      - name: Build Python with Relenv
        env:
          RELENV_NATIVE_PY_VERSION: 3.10.15
        run: |
          python -m relenv build --no-pretty --arch=${{ matrix.arch }} --python=${{ matrix.version }}

      - name: Verify Build
        if: ${{ matrix.arch == 'amd64' }}
        run: |
          nox -e tests -- tests/test_verify_build.py

      - name: Upload Build Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.version }}-${{ matrix.arch }}-windows-logs
          path: logs/*
          retention-days: 5

      - name: Upload Zipfile
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.version }}-${{ matrix.arch }}-win.tar.xz
          path: build/${{ matrix.version }}-${{ matrix.arch }}-win.tar.xz
          retention-days: 5
